{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://anapioficeandfire.com/api\";\n/**\n * Class representing Ice and Fire API client\n */\nclass IceAndFireApi {\n  /**\n   * Fetches characters with pagination from the API.\n   * @param {number} page - The page number to retrieve.\n   * @param {number} pageSize - The number of items per page.\n   * @returns {Promise} A promise that resolves to the characters data.\n   */\n  static async getCharacters() {\n    const response = await axios.get(`${BASE_URL}/characters`);\n    return response.data;\n  }\n  /**\n   * Fetches a character by its ID from the API.\n   * @param {string} id - The ID of the character.\n   * @returns {Promise} A promise that resolves to the character data.\n   */\n  static async getCharacterById(id) {\n    const response = await axios.get(`${BASE_URL}/characters/${id}`);\n    return response.data;\n  }\n  /**\n   * Fetches all the houses from the API.\n   * @returns {Promise} A promise that resolves to the houses data.\n   */\n  static async getHouses() {\n    const response = await axios.get(`${BASE_URL}/houses`);\n    return response.data;\n  }\n  /**\n   * Fetches an allegiance by its URL from the API.\n   * @param {string} url - The URL of the allegiance.\n   * @returns {Promise} A promise that resolves to the allegiance data.\n   */\n  static async getAllegianceByUrl(url) {\n    const response = await axios.get(url);\n    return response.data;\n  }\n}\nexport default IceAndFireApi;","map":{"version":3,"names":["axios","BASE_URL","IceAndFireApi","getCharacters","response","get","data","getCharacterById","id","getHouses","getAllegianceByUrl","url"],"sources":["/home/eddie/Code/guided-capstone-project/src/services/IceAndFireApi.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://anapioficeandfire.com/api\"\n/**\n * Class representing Ice and Fire API client\n */\nclass IceAndFireApi {\n    /**\n     * Fetches characters with pagination from the API.\n     * @param {number} page - The page number to retrieve.\n     * @param {number} pageSize - The number of items per page.\n     * @returns {Promise} A promise that resolves to the characters data.\n     */\n    static async getCharacters() {\n        const response = await axios.get(`${BASE_URL}/characters`);\n        return response.data;\n    }\n    /**\n     * Fetches a character by its ID from the API.\n     * @param {string} id - The ID of the character.\n     * @returns {Promise} A promise that resolves to the character data.\n     */\n    static async getCharacterById(id) {\n        const response = await axios.get(`${BASE_URL}/characters/${id}`);\n        return response.data;\n    }\n    /**\n     * Fetches all the houses from the API.\n     * @returns {Promise} A promise that resolves to the houses data.\n     */\n    static async getHouses() {\n        const response = await axios.get(`${BASE_URL}/houses`);\n        return response.data;\n    }\n    /**\n     * Fetches an allegiance by its URL from the API.\n     * @param {string} url - The URL of the allegiance.\n     * @returns {Promise} A promise that resolves to the allegiance data.\n     */\n    static async getAllegianceByUrl(url) {\n        const response = await axios.get(url);\n        return response.data;\n    }\n}\n\nexport default IceAndFireApi;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,mCAAmC;AACpD;AACA;AACA;AACA,MAAMC,aAAa,CAAC;EAChB;AACJ;AACA;AACA;AACA;AACA;EACI,aAAaC,aAAaA,CAAA,EAAG;IACzB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,aAAY,CAAC;IAC1D,OAAOG,QAAQ,CAACE,IAAI;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,aAAaC,gBAAgBA,CAACC,EAAE,EAAE;IAC9B,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,eAAcO,EAAG,EAAC,CAAC;IAChE,OAAOJ,QAAQ,CAACE,IAAI;EACxB;EACA;AACJ;AACA;AACA;EACI,aAAaG,SAASA,CAAA,EAAG;IACrB,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,SAAQ,CAAC;IACtD,OAAOG,QAAQ,CAACE,IAAI;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,aAAaI,kBAAkBA,CAACC,GAAG,EAAE;IACjC,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACM,GAAG,CAAC;IACrC,OAAOP,QAAQ,CAACE,IAAI;EACxB;AACJ;AAEA,eAAeJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}